
clear all
close all

global STEP
global CHL_PATH
global CHL_HEAD
global OUT_PATH
global OUT_HEAD
global SSH_PATH
global TRACK_DATA
global SSH_HEAD
global AMSRE_PATH
global AMSRE_HEAD
global OI_PATH
global OI_HEAD
global Q_PATH
global Q_HEAD
global RAND_PATH
global RAND_HEAD
global MSST_PATH
global MSST_HEAD
global CHL_DATA
global START_JD
global END_JD
global MIN_AMP
global MAX_AMP
global MIN_DUR
global START_YR
global START_MO
global START_DY
global END_YR
global END_MO
global END_DY
global RAD_ADD
global RAD_MULT
global MAX_AMP
global SAM_RAD
global SCENE RAD

set_crl_test_param




%----------------------------------------------------------------------
% Sample Eddies
%----------------------------------------------------------------------

%make arrays to save jdays
%find grid spacing
ssh_file = [SSH_PATH SSH_HEAD num2str(jdays(1))];
load(ssh_file)
dy = abs(lat(2)-lat(1)); %m
BOX = floor(2*SCENE_RAD/dy);
cent = (BOX/2)+1;



for m=1:length(jdays)
	fprintf('\r     Sampling %07u , %3u of %3u \r',jdays(m),m,length(jdays))
	lay = 1;
	%find eddies that are present at jdays(m)
	tmp = find(sam_track_jday == jdays(m));
	
	% Set up file names
	ssh_file = [SSH_PATH SSH_HEAD num2str(jdays(m))];
	amsre_file = [AMSRE_PATH AMSRE_HEAD num2str(jdays(m))];
	oi_file = [OI_PATH OI_HEAD num2str(jdays(m))];
	q_file = [Q_PATH Q_HEAD num2str(jdays(m))];
	r_file = [RAND_PATH RAND_HEAD  num2str(jdays(m))];
	out_file = [OUT_PATH OUT_HEAD num2str(jdays(m))];
	
	
	% load files
	load(ssh_file)
	lat=lat(41:600,:);
	lon=lon(41:600,:);
	ssh=ssh(41:600,:);
	u=u(41:600,:);
	v=v(41:600,:);
	crl=crl(41:600,:);
	idmask=idmask(41:600,:);
	
	%load Rand data
	load(r_file,'R')
	R=R(41:600,:);
	
	% load qscat data
	load(q_file, 'lp66_crl')

	% make test files
	crl_10  = -crl +(1      .*lp66_crl);
	crl_9  	= -crl +(.9     .*lp66_crl);
	crl_8 	= -crl +(.8   	.*lp66_crl);
	crl_7 	= -crl +(.7     .*lp66_crl);
	crl_6 	= -crl +(.6   	.*lp66_crl);
	crl_5 	= -crl +(.5 	.*lp66_crl);
	crl_4 	= -crl +(.4   	.*lp66_crl);
	crl_3 	= -crl +(.3		.*lp66_crl);
	crl_2  	= -crl +(.2		.*lp66_crl);
	crl_1  	= -crl +(.1   	.*lp66_crl);
	
	ncrl_10		= -crl + (R .*1e-5  .*   1);
	ncrl_9  	= -crl + (R .*1e-5  .*  .9);
	ncrl_8 		= -crl + (R .*1e-5  .*  .8);
	ncrl_7 		= -crl + (R .*1e-5  .*  .7);
	ncrl_6 		= -crl + (R .*1e-5  .*  .6);
	ncrl_5 		= -crl + (R .*1e-5  .*  .5);
	ncrl_4 		= -crl + (R .*1e-5  .*  .4);
	ncrl_3 		= -crl + (R .*1e-5  .*  .3);
	ncrl_2  	= -crl + (R .*1e-5  .*  .2);
	ncrl_1  	= -crl + (R .*1e-5  .*  .1);
	
	
	
    % Prealocate space to save jdays
	%{
	nrcrl_10_sample				= single(nan(225,225,length(tmp)));
	nrcrl_9_sample 				= single(nan(225,225,length(tmp)));
	nrcrl_8_sample 				= single(nan(225,225,length(tmp)));
	nrcrl_7_sample 				= single(nan(225,225,length(tmp)));
	nrcrl_6_sample 				= single(nan(225,225,length(tmp)));
	nrcrl_5_sample 				= single(nan(225,225,length(tmp)));
	nrcrl_4_sample 				= single(nan(225,225,length(tmp)));
	nrcrl_3_sample 				= single(nan(225,225,length(tmp)));
	nrcrl_2_sample 				= single(nan(225,225,length(tmp)));
	nrcrl_1_sample 				= single(nan(225,225,length(tmp)));
	%}
	
	crl_sample 					= single(nan(41,41,length(tmp)));
	
	crl_10_sample				= single(nan(41,41,length(tmp)));
	crl_9_sample 				= single(nan(41,41,length(tmp)));
	crl_8_sample 				= single(nan(41,41,length(tmp)));
	crl_7_sample 				= single(nan(41,41,length(tmp)));
	crl_6_sample 				= single(nan(41,41,length(tmp)));
	crl_5_sample 				= single(nan(41,41,length(tmp)));
	crl_4_sample 				= single(nan(41,41,length(tmp)));
	crl_3_sample 				= single(nan(41,41,length(tmp)));
	crl_2_sample 				= single(nan(41,41,length(tmp)));
	crl_1_sample 				= single(nan(41,41,length(tmp)));
	
	
	ncrl_10_sample				= single(nan(41,41,length(tmp)));
	ncrl_9_sample 				= single(nan(41,41,length(tmp)));
	ncrl_8_sample 				= single(nan(41,41,length(tmp)));
	ncrl_7_sample 				= single(nan(41,41,length(tmp)));
	ncrl_6_sample 				= single(nan(41,41,length(tmp)));
	ncrl_5_sample 				= single(nan(41,41,length(tmp)));
	ncrl_4_sample 				= single(nan(41,41,length(tmp)));
	ncrl_3_sample 				= single(nan(41,41,length(tmp)));
	ncrl_2_sample 				= single(nan(41,41,length(tmp)));
	ncrl_1_sample 				= single(nan(41,41,length(tmp)));
	
	id_index	            = single(nan(length(tmp),1)); 
    eid_index	            = single(nan(length(tmp),1));
    x_index		            = single(nan(length(tmp),1));
    y_index		            = single(nan(length(tmp),1));
    efold_index		        = single(nan(length(tmp),1));
    k_index					= single(nan(length(tmp),1));
	
for ed = 1:length(tmp)
 		%fprintf('\r     Rotating %3u of %3u \r',ed,length(tmp))
        % Start out by indexing spatial location of data to be centered at eddy
        r = find(lat(:,100)>= sam_y(tmp(ed)) - (SCENE_RAD + dy/2) & ...
                 lat(:,100)<= sam_y(tmp(ed)) + (SCENE_RAD + dy/2));
        
        c = find(lon(100,:)>= sam_x(tmp(ed)) - (SCENE_RAD + dy/2) & ...
                 lon(100,:)<= sam_x(tmp(ed)) + (SCENE_RAD + dy/2));
        
                
        if length(r) == BOX+1 & length(c) == BOX+1
        scene_lat = single(lat(r,c)); 
        scene_lon = single(lon(r,c));
        emask = idmask(r,c);
        
        %now mask the data
        emask(abs(emask) ~= sam_eid(tmp(ed)))=nan;
        mask=emask;
        tmask=mask;
        tmask(tmask>0)=nan;
        mask(~isnan(mask))=1;
        tmask(~isnan(tmask))=1;
        
		scene_crl = single(-crl(r,c)).*mask;
		
		scene_crl_1 = single(crl_1(r,c)).*mask;
		scene_crl_2 = single(crl_2(r,c)).*mask;
		scene_crl_3 = single(crl_3(r,c)).*mask;
		scene_crl_4 = single(crl_4(r,c)).*mask;
		scene_crl_5 = single(crl_5(r,c)).*mask;
		scene_crl_6 = single(crl_6(r,c)).*mask;
		scene_crl_7 = single(crl_7(r,c)).*mask;
		scene_crl_8 = single(crl_8(r,c)).*mask;
		scene_crl_9 = single(crl_9(r,c)).*mask;
		scene_crl_10= single(crl_10(r,c)).*mask;
		
		scene_ncrl_1 = single(ncrl_1(r,c)).*mask;
		scene_ncrl_2 = single(ncrl_2(r,c)).*mask;
		scene_ncrl_3 = single(ncrl_3(r,c)).*mask;
		scene_ncrl_4 = single(ncrl_4(r,c)).*mask;
		scene_ncrl_5 = single(ncrl_5(r,c)).*mask;
		scene_ncrl_6 = single(ncrl_6(r,c)).*mask;
		scene_ncrl_7 = single(ncrl_7(r,c)).*mask;
		scene_ncrl_8 = single(ncrl_8(r,c)).*mask;
		scene_ncrl_9 = single(ncrl_9(r,c)).*mask;
		scene_ncrl_10= single(ncrl_10(r,c)).*mask;
		
        %rotate samples
		 % Calculate propoigation info and interp
        %{
        if sam_k(tmp(ed))==1
       		nrcrl_1=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_1), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_2=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_2), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_3=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_3), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_4=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_4), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_5=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_5), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_6=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_6), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(sam_efold(tmp(ed))));	
			nrcrl_7=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_7), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_8=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_8), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_9=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_9), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_10=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_10), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(sam_efold(tmp(ed))));
	 
			
        elseif sam_k(tmp(ed))==2 & length(find(sam_id==sam_id(tmp(ed)) & sam_k==1))>0
        	ip=find(sam_id==sam_id(tmp(ed)) & sam_k==1);
        	x1=sam_x(ip);
        	y1=sam_y(ip);
        	% Interp to normailize and rotated grid
			nrcrl_1=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_1), ...
				 double(x1), ...
				 double(y1), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_2=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_2), ...
				 double(x1), ...
				 double(y1), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_3=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_3), ...
				 double(x1), ...
				 double(y1), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_4=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_4), ...
				 double(x1), ...
				 double(y1), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_5=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_5), ...
				 double(x1), ...
				 double(y1), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_6=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_6), ...
				 double(x1), ...
				 double(y1), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_7=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_7), ...
				 double(x1), ...
				 double(y1), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_8=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_8), ...
				 double(x1), ...
				 double(y1), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_9=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_9), ...
				 double(x1), ...
				 double(y1), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_10=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_10), ...
				 double(x1), ...
				 double(y1), ...
				 double(sam_efold(tmp(ed))));	 
			
        elseif sam_k(tmp(ed))>= 3 & length(find(sam_id==sam_id(tmp(ed)) & sam_k==sam_k(tmp(ed))-2))>0
        	ip=find(sam_id==sam_id(tmp(ed)) & sam_k==sam_k(tmp(ed))-2);
        	x1=sam_x(ip);
        	y1=sam_y(ip);
        	% Interp to normailiaze and rotated grid
			nrcrl_1=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_1), ...
				 double(x1), ...
				 double(y1), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_2=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_2), ...
				 double(x1), ...
				 double(y1), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_3=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_3), ...
				 double(x1), ...
				 double(y1), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_4=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_4), ...
				 double(x1), ...
				 double(y1), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_5=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_5), ...
				 double(x1), ...
				 double(y1), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_6=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_6), ...
				 double(x1), ...
				 double(y1), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_7=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_7), ...
				 double(x1), ...
				 double(y1), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_8=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_8), ...
				 double(x1), ...
				 double(y1), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_9=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_9), ...
				 double(x1), ...
				 double(y1), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_10=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_10), ...
				 double(x1), ...
				 double(y1), ...
				 double(sam_efold(tmp(ed))));
				 
		else
			nrcrl_1=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_1), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_2=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_2), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_3=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_3), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_4=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_4), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_5=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_5), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_6=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_6), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(sam_efold(tmp(ed))));	
			nrcrl_7=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_7), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_8=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_8), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_9=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_9), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(sam_efold(tmp(ed))));
			nrcrl_10=rgrid(double(scene_lon), ...
				 double(scene_lat), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(scene_crl_10), ...
				 double(sam_x(tmp(ed))), ...
				 double(sam_y(tmp(ed))), ...
				 double(sam_efold(tmp(ed))));
				
		end
		%}

        crl_sample(:,:,lay) = scene_crl;
        
        crl_1_sample(:,:,lay) = scene_crl_1;
        crl_2_sample(:,:,lay) = scene_crl_2;
        crl_3_sample(:,:,lay) = scene_crl_3;
        crl_4_sample(:,:,lay) = scene_crl_4;
        crl_5_sample(:,:,lay) = scene_crl_5;
        crl_6_sample(:,:,lay) = scene_crl_6;
        crl_7_sample(:,:,lay) = scene_crl_7;
        crl_8_sample(:,:,lay) = scene_crl_8;
        crl_9_sample(:,:,lay) = scene_crl_9;
        crl_10_sample(:,:,lay)= scene_crl_10;
        
        ncrl_1_sample(:,:,lay) = scene_ncrl_1;
        ncrl_2_sample(:,:,lay) = scene_ncrl_2;
        ncrl_3_sample(:,:,lay) = scene_ncrl_3;
        ncrl_4_sample(:,:,lay) = scene_ncrl_4;
        ncrl_5_sample(:,:,lay) = scene_ncrl_5;
        ncrl_6_sample(:,:,lay) = scene_ncrl_6;
        ncrl_7_sample(:,:,lay) = scene_ncrl_7;
        ncrl_8_sample(:,:,lay) = scene_ncrl_8;
        ncrl_9_sample(:,:,lay) = scene_ncrl_9;
        ncrl_10_sample(:,:,lay)= scene_ncrl_10;
        
        %{
        nrcrl_1_sample(:,:,lay) = nrcrl_1;
        nrcrl_2_sample(:,:,lay) = nrcrl_2;
        nrcrl_3_sample(:,:,lay) = nrcrl_3;
        nrcrl_4_sample(:,:,lay) = nrcrl_4;
        nrcrl_5_sample(:,:,lay) = nrcrl_5;
        nrcrl_6_sample(:,:,lay) = nrcrl_6;
        nrcrl_7_sample(:,:,lay) = nrcrl_7;
        nrcrl_8_sample(:,:,lay) = nrcrl_8;
        nrcrl_9_sample(:,:,lay) = nrcrl_9;
        nrcrl_10_sample(:,:,lay)= nrcrl_10;
		%}
        %from eddy file
        id_index(lay)           = sam_id(tmp(ed)); 
        eid_index(lay)          = sam_eid(tmp(ed));
        x_index(lay)            = sam_x(tmp(ed));
        y_index(lay)            = sam_y(tmp(ed)); 
        efold_index(lay)        = sam_efold(tmp(ed));
        k_index(lay)			= sam_k(tmp(ed));
        
        lay=lay+1;
        end
    end
    
    % Now save the data
    
    eval(['save ' out_file ' *_sample *_index'])
end    
    




















