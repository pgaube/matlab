function [lat,lon,P,S,T]=read_profiles(fname);data_dir='~/data/argo/profiles/';ncid=netcdf.open([data_dir fname], 'NC_NOWRITE');[dum,tes]=netcdf.inq(ncid);lat = netcdf.getVar(ncid,netcdf.inqVarID(ncid,'LATITUDE'));lon = netcdf.getVar(ncid,netcdf.inqVarID(ncid,'LONGITUDE'));if lon<0	lon = 180+(180+lon);end	if any(netcdf.inqVarID(ncid,'PRES_ADJUSTED'))	Varid=netcdf.inqVarID(ncid,'PRES_ADJUSTED');	P = netcdf.getVar(ncid,Varid);	Varid=netcdf.inqVarID(ncid,'PRES_QC');	qcP = str2num(netcdf.getVar(ncid,Varid));	%{    P(qcP~=1)=nan;	if min(P)>=10 | max(P)<1000		P=nan*P;	end	ii=find(P<=1000);	if length(ii)<30		P=nan*P;	end    %}end	if any(netcdf.inqVarID(ncid,'TEMP_ADJUSTED'))	Varid=netcdf.inqVarID(ncid,'TEMP_ADJUSTED');	T = netcdf.getVar(ncid,Varid);	Varid=netcdf.inqVarID(ncid,'TEMP_QC');	qcT = str2num(netcdf.getVar(ncid,Varid));	T(qcT~=1)=nan;else	T = nan(size(P));endif tes>55	Varid=netcdf.inqVarID(ncid,'PSAL_ADJUSTED');	S = netcdf.getVar(ncid,Varid);	Varid=netcdf.inqVarID(ncid,'PSAL_QC');	qcS = str2num(netcdf.getVar(ncid,Varid));	S(qcS~=1)=nan;else	S = nan(size(P));endnetcdf.close(ncid);%now do quality contolpres=P;t=T;s=S;%check delt presdp=diff(pres);dp(end+1)=1;ii=find(pres<=100);fr=find(dp(ii)>25);dp(fr)=[];pres(fr)=[];t(fr)=[];s(fr)=[];ii=find(pres>100 & pres<=300);fr=find(dp(ii)>50);dp(fr)=[];pres(fr)=[];t(fr)=[];s(fr)=[];ii=find(pres>300);fr=find(dp(ii)>100);dp(fr)=[];pres(fr)=[];t(fr)=[];s(fr)=[];%find too deep measurmets, and bad onesfr=find(pres>2000);pres(fr)=[];t(fr)=[];s(fr)=[];%screen for crazy sal valuesfr=find(s<10 | s>50);pres(fr)=[];t(fr)=[];s(fr)=[];%screen for crazy temp valuesfr=find(t<-10 | t>50);pres(fr)=[];t(fr)=[];s(fr)=[];%extrapolate uppermost measurment to surfaceif any(pres)pres=cat(1,0,pres);elsepres=nan;t=nan;s=nan;returnendif any(t)ttop=t(1);t=cat(1,ttop,t);elset=cat(1,nan,t);endif any(s)stop=s(1);s=cat(1,stop,s);elses=cat(1,nan,s);endS=s;T=t;P=pres;